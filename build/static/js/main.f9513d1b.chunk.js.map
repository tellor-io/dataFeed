{"version":3,"sources":["utils/chains.js","assets/tellor_white.svg","assets/tellor.svg","contexts/Mode.js","components/frontendBoilerplate/Nav.js","components/frontendBoilerplate/Footer.js","assets/filter_outline.svg","assets/filter.svg","assets/done.svg","utils/psrLookup.js","utils/queryDataParsers.js","utils/helpers.js","components/Table.js","utils/queries.js","utils/apollo.js","contexts/Graph.js","components/LinearIndeterminate.js","components/AllFeeds.js","components/TipTable.js","contexts/GraphAutopay.js","components/ErrorBoundary.js","components/AllTips.js","components/Hero.js","App.js","contexts/User.js","index.js"],"names":["module","exports","_path","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgTellorWhite","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","SvgTellor","ModeContext","createContext","Mode","children","mode","setMode","useState","localStorage","getItem","ModeContextObject","changeMode","setItem","_jsx","Provider","value","Nav","useContext","className","href","alt","rel","Tellor","TellorDark","CustomSwitch","styled","Switch","theme","color","palette","primary","main","createTheme","secondary","label","inputProps","Footer","_jsxs","ThemeProvider","checked","onClick","SvgFilterOutline","SvgFilter","SvgDone","psrLookup","name","granularity","eighteenDecimals","web3","Web3","window","ethereum","queryDataParsers","LegacyRequest","event","queryId","decodedValueName","decodedValue","Intl","NumberFormat","style","currency","format","_value","toString","MimicryNFTMarketIndex","queryDataObj","slice","toUpperCase","valueInWei","parseInt","formattedValue","MimicryMacroMarketMashup","console","log","MimicryCollectionStat","AmpleforthCustomSpotPrice","FileCID","firstThree","substring","lastThree","EVMBalanceCurrent","eth","abi","decodeParameters","_queryData","decodedValues","valueInEther","utils","fromWei","trimmedValue","parseFloat","toFixed","chainName","BTCBalanceCurrent","StringQuery","decodedString","hexToAscii","replace","trim","EVMCall","SpotPrice","asset","Number","SpotPriceProper","options","queryData","minimumFractionDigits","maximumFractionDigits","includes","currencySymbol","formatToParts","find","part","type","test","Default","getDate","timestamp","dateArr","Date","split","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","hex2a","hexx","hex","str","i","String","fromCharCode","substr","truncateAddr","addr","sortDataByProperty","prop","arr","sort","a","b","Table","data","allData","setFiltering","tableData","setTableData","symbolClicked","setSymbolClicked","chainClicked","setChainClicked","reporterClicked","setReporterClicked","dateClicked","setDateClicked","reportedSymbols","setReportedSymbols","reportedChains","setReportedChains","reportedReporters","setReportedReporters","reportedDates","setReportedDates","symbolSearchTerm","setSymbolSearchTerm","reporterSearchTerm","setReporterSearchTerm","startDateSearchTerm","setStartDateSearchTerm","endDateSearchTerm","setEndDateSearchTerm","allFilters","setAllFilters","symbolFilters","setSymbolFilters","chainFilters","setChainFilters","reporterFilters","setReporterFilters","dateFilters","setDateFilters","symbolRef","useRef","chainRef","reporterRef","dateRef","dropdownRef","applyFilters","useCallback","decodedData","filteredData","filter","symbolMatch","chainMatch","chain","reporterMatch","decodedReporter","startDate","endDate","eventDate","decodedTime","reverse","join","dateMatch","some","filterDate","startsWith","areFiltersApplied","useEffect","symbols","Set","chains","reporters","dates","forEach","feedType","add","Array","from","handleFilterApply","handleFilter","filterType","filterValue","temp","allFiltersTemp","allFiltersObj","filters","handleFilterClear","cleared","formatValue","handleClickOutside","_symbolRef$current","_chainRef$current","_reporterRef$current","_dateRef$current","current","contains","target","classList","remove","document","addEventListener","removeEventListener","FilterIconFilled","FilterIcon","el","display","flexDirection","maxHeight","overflowY","placeholder","onChange","flexGrow","symbol","toLowerCase","map","_Fragment","Checked","reporter","date","handleRowClick","txnLink","open","focus","Jazzicon","address","reporterQuery","gql","autopayQuery","createClient","uri","ApolloClient","cache","InMemoryCache","clientMainnet","clientSepolia","clientMatic","clientAmoy","clientArbone","clientGnosismain","clientOptMain","clientOptTest","clientLinea","clientLineaTest","clientPolygonzk","clientZksyncMain","clientZksyncTest","clientScroll","clientBase","GraphContext","explorerUrls","mainnet","sepolia","matic","amoy","arbone","gnosismain","optMain","optTest","linea","lineaTest","polygonzk","zksyncMain","zksyncTest","scroll","base","networkNames","Graph","networkData","setNetworkData","loading","error","allGraphData","setAllGraphData","setDecodedData","useQueryWithTimeout","query","client","networkName","timeout","undefined","useQuery","fetchPolicy","pollInterval","timer","setTimeout","prev","Error","clearTimeout","newData","entries","flatMap","_ref2","processNetworkData","newReportEntities","txnHash","uniqueId","combined","uniqueData","Map","item","values","decoded","queryDataPartial","finalQueryData","_nonce","_time","toChecksumAddress","_reporter","_queryId","_queryData3","_queryData4","JSON","parse","Type","t1","snapshotProposalId","CustomLinearProgress","LinearProgress","LinearIndeterminate","Box","sx","AllFeeds","graphData","clippedData","setClippedData","loadMoreClicks","setLoadMoreClicks","viewing","setViewing","loadMoreButton","setLoadMoreButton","filtering","setFilters","prevData","newItem","onFilterChange","newFilters","handleLoadMore","cursor","TipTable","stringify","push","handleClick","iconType","handleClose","symbolFilter","chainFilter","makesTheCut","dataProvider","referenceAsset","tips","tip","interval","Math","min","collateralBalanceGross","settlementFee","balance","expiryTime","startTime","colSpan","GraphAutopayContext","GraphAutopay","autopayMainnetData","setAutopayMainnetData","autopayAmoyData","setAutopayAmoyData","autopaySepoliaData","setAutopaySepoliaData","eventsArray","dataFeedEntities","updatedEvent","tipAddedEntities","sorted","autopayEvents","_event$_reward$toStri","_event$_amount$toStri","_event$_amount","_event$_balance$toStr","divaPayQuery","divaPayAdaptorQuery","_interval","_reward","_amount","_balance","multipliedValue","amount","tippingToken","_startTime","_window","floor","collateralToken","_queryData2","pools","proposedFinalReferenceValue","pool","feeRecipients","collateralTokens","feeRecipient","filtered","decodingAutopayMiddleware","GraphContextObj","ErrorBoundary","Component","constructor","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","AllTips","autoPayData","loads","ceil","loadAmount","Hero","marginTop","App","UserContext","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","web3Modal","Web3Modal","cacheProvider","User","currentUser","setCurrentUser","connected","setConnected","setupUserError","setSetupUserError","eventsOn","setEventsOn","setupUser","async","user","provider","connect","chainId","getChainId","getAccounts","network","balances","trbContractEthereum","Contract","minABI","trbContractPolygon","trbContractMumbai","trbContractGoerli","trbContractArbone","chainMainTokenBalance","trbBalance","getBalance","methods","balanceOf","then","res","round","trb","getAssetBalances","err","message","clearCachedProvider","on","accounts","UserContextObject","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f9513d1b.chunk.js","sourcesContent":["module.exports = {\n    1: \"mainnet\",\n    3: \"ropsten\",\n    4: \"rinkeby\",\n    5: \"goerli\",\n    42: \"kovan\",\n    137: \"matic\",\n    42161: \"arbone\",\n    80001: \"mumbai\",\n    11155111: \"sepolia\"\n}","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTellorWhite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 54,\n    viewBox: \"0 0 193 54\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.78 23.04H23.48V13.87H15.78V3.58H5.42V13.87H0.73V23.04H5.42V44.39C5.42 52.51 10.39 53.98 18.51 53.98C19.98 53.98 21.94 53.84 23.2 53.7V44.88C22.57 44.95 21.73 45.02 20.54 45.02C15.85 45.02 15.78 41.38 15.78 39.28V23.04ZM50.6509 53.98C61.9209 53.98 67.1009 47.12 68.6409 45.02L60.5209 40.33C59.3309 41.66 56.4609 44.81 50.6509 44.81C48.5509 44.81 41.4109 44.11 40.1509 37.81H70.5309C70.5309 37.81 70.7409 35.92 70.7409 32.98C70.3909 20.59 60.5209 13.87 50.6509 13.87C43.4409 13.87 29.7209 18.07 29.7209 33.89C29.7209 49.71 43.1609 53.98 50.6509 53.98ZM50.5809 23.04C55.8309 23.04 59.2609 26.89 59.6809 30.39H40.4309C40.8509 26.47 44.5609 23.04 50.5809 23.04ZM79.2574 53H89.7574V0.0799971H79.2574V53ZM99.8336 53H110.334V0.0799971H99.8336V53ZM139.38 53.91C150.86 53.91 160.38 44.95 160.38 33.82C160.38 22.83 150.86 13.8 139.38 13.8C127.9 13.8 118.52 22.83 118.52 33.82C118.52 44.95 127.9 53.91 139.38 53.91ZM139.38 22.97C145.33 22.97 149.95 27.66 149.95 33.82C149.95 40.05 145.33 44.81 139.38 44.81C133.36 44.81 128.81 40.19 128.81 33.82C128.81 27.73 133.5 22.97 139.38 22.97ZM192.393 24.02V13.8C189.663 13.73 183.153 14.43 179.233 19.61V14.5H168.803V53H179.233V35.99C179.233 24.3 189.873 23.81 192.393 24.02Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTellorWhite);\nexport default __webpack_public_path__ + \"static/media/tellor_white.4a00555c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTellor(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 193,\n    height: 54,\n    viewBox: \"0 0 193 54\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.78 23.04H23.48V13.87H15.78V3.58H5.42V13.87H0.73V23.04H5.42V44.39C5.42 52.51 10.39 53.98 18.51 53.98C19.98 53.98 21.94 53.84 23.2 53.7V44.88C22.57 44.95 21.73 45.02 20.54 45.02C15.85 45.02 15.78 41.38 15.78 39.28V23.04ZM50.6509 53.98C61.9209 53.98 67.1009 47.12 68.6409 45.02L60.5209 40.33C59.3309 41.66 56.4609 44.81 50.6509 44.81C48.5509 44.81 41.4109 44.11 40.1509 37.81H70.5309C70.5309 37.81 70.7409 35.92 70.7409 32.98C70.3909 20.59 60.5209 13.87 50.6509 13.87C43.4409 13.87 29.7209 18.07 29.7209 33.89C29.7209 49.71 43.1609 53.98 50.6509 53.98ZM50.5809 23.04C55.8309 23.04 59.2609 26.89 59.6809 30.39H40.4309C40.8509 26.47 44.5609 23.04 50.5809 23.04ZM79.2574 53H89.7574V0.0799971H79.2574V53ZM99.8336 53H110.334V0.0799971H99.8336V53ZM139.38 53.91C150.86 53.91 160.38 44.95 160.38 33.82C160.38 22.83 150.86 13.8 139.38 13.8C127.9 13.8 118.52 22.83 118.52 33.82C118.52 44.95 127.9 53.91 139.38 53.91ZM139.38 22.97C145.33 22.97 149.95 27.66 149.95 33.82C149.95 40.05 145.33 44.81 139.38 44.81C133.36 44.81 128.81 40.19 128.81 33.82C128.81 27.73 133.5 22.97 139.38 22.97ZM192.393 24.02V13.8C189.663 13.73 183.153 14.43 179.233 19.61V14.5H168.803V53H179.233V35.99C179.233 24.3 189.873 23.81 192.393 24.02Z\",\n    fill: \"#262626\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTellor);\nexport default __webpack_public_path__ + \"static/media/tellor.a85cc955.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, createContext } from 'react'\n\nexport const ModeContext = createContext()\n\nconst Mode = ({ children }) => {\n  //Context State\n  const [mode, setMode] = useState(() => {\n    const saved = localStorage.getItem('mode')\n    return saved || 'dark'\n  })\n\n  const changeMode = () => {\n    if (mode === 'light') {\n      localStorage.setItem('mode', 'dark')\n      setMode('dark')\n    } else if (mode === 'dark') {\n      localStorage.setItem('mode', 'light')\n      setMode('light')\n    }\n  }\n\n  const ModeContextObject = {\n    mode: mode,\n    changeMode: changeMode,\n  }\n\n  return (\n    <ModeContext.Provider value={ModeContextObject}>\n      {children}\n    </ModeContext.Provider>\n  )\n}\n\nexport default Mode\n","import React, { useContext } from 'react'\n//Assets\nimport { ReactComponent as Tellor } from '../../assets/tellor_white.svg'\nimport { ReactComponent as TellorDark } from '../../assets/tellor.svg'\n//Components\n//import WalletConnect from \"./WalletConnect\";\n//Styles\nimport '../../styles/frontendBoilerplate/Nav.css'\n//Contexts\nimport { ModeContext } from '../../contexts/Mode'\n\nfunction Nav() {\n  const mode = useContext(ModeContext)\n  return (\n    <div className=\"Nav\">\n      <a\n        href=\"https://tellor.io/\"\n        alt=\"https://tellor.io/\"\n        rel=\"noopener noreferrer\"\n      >\n        {mode && mode.mode === 'dark' ? (\n          <Tellor className=\"TellorLogo\" />\n        ) : (\n          <TellorDark className=\"TellorLogo\" />\n        )}\n      </a>\n      {/* <WalletConnect /> */}\n    </div>\n  )\n}\n\nexport default Nav\n","import React, { useContext } from 'react'\nimport '../../styles/frontendBoilerplate/Footer.css'\nimport Switch from '@mui/material/Switch'\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles'\nimport { ModeContext } from '../../contexts/Mode'\n\nconst CustomSwitch = styled(Switch)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#20f092',\n      secondary: 'rgba(32, 240, 146, 0.2)',\n    },\n  },\n})\n\nconst label = { inputProps: { 'aria-label': 'Dark/Light Mode Switch' } }\n\nfunction Footer() {\n  //Context State\n  const mode = useContext(ModeContext)\n\n  return (\n    <div className=\"Footer\">\n      <p className=\"FooterText\">&copy; 2023 Tellor, Inc.</p>\n      <div className=\"ModeSwitcher\">\n        <p className=\"ModeSwitcherText\">\n          {mode && mode.mode === 'dark'\n            ? 'Switch to Light Mode'\n            : 'Switch to Dark Mode'}\n        </p>\n        <ThemeProvider theme={theme}>\n          <CustomSwitch\n            {...label}\n            checked={mode && mode.mode === 'dark' ? true : false}\n            onClick={mode.changeMode}\n          />\n        </ThemeProvider>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilterOutline(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 3H4C3.447 3 3 3.447 3 4V6.59C3 7.113 3.213 7.627 3.583 7.997L9 13.414V21C9 21.347 9.18 21.668 9.475 21.851C9.635 21.95 9.817 22 10 22C10.153 22 10.306 21.965 10.447 21.895L14.447 19.895C14.786 19.725 15 19.379 15 19V13.414L20.417 7.997C20.787 7.627 21 7.113 21 6.59V4C21 3.447 20.553 3 20 3ZM13.293 12.293C13.105 12.48 13 12.734 13 13V18.382L11 19.382V13C11 12.734 10.895 12.48 10.707 12.293L5 6.59V5H19.001L19.003 6.583L13.293 12.293Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilterOutline);\nexport default __webpack_public_path__ + \"static/media/filter_outline.8b97acfd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFilter(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.4472 20.9051C13.786 20.7376 14 20.3951 14 20.0204V14.6999C14 14.4376 14.1054 14.186 14.2929 14.0005L20.414 7.94576C20.789 7.57483 21 7.07135 21 6.54611V3.98915C21 3.44215 20.553 3 20 3H4C3.447 3 3 3.44215 3 3.98915V6.54611C3 7.07135 3.211 7.57483 3.586 7.94576L9.70711 14.0005C9.89464 14.186 10 14.4376 10 14.6999V21.0096C10 21.7449 10.7823 22.2231 11.4472 21.8943L13.4472 20.9051Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilter);\nexport default __webpack_public_path__ + \"static/media/filter.913fff00.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDone(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.00002 16.2001L4.80002 12.0001L3.40002 13.4001L9.00002 19.0001L21 7.0001L19.6 5.6001L9.00002 16.2001Z\",\n    fill: \"#262626\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDone);\nexport default __webpack_public_path__ + \"static/media/done.62fd101c.svg\";\nexport { ForwardRef as ReactComponent };","export const psrLookup = {\n  1: { name: 'ETH/USD', granularity: '1000000' },\n  2: { name: 'BTC/USD', granularity: '1000000' },\n  3: { name: 'BNB/USD', granularity: '1000000' },\n  4: { name: 'BTC/USD', granularity: '1000000' },\n  5: { name: 'ETH/BTC', granularity: '1000000' },\n  6: { name: 'BNB/BTC', granularity: '1000000' },\n  7: { name: 'BNB/ETH', granularity: '1000000' },\n  8: { name: 'ETH/USD', granularity: '1000000' },\n  9: { name: 'ETH/USD', granularity: '1000000' },\n  10: { name: 'AMPL/USD', granularity: '1000000' },\n  11: { name: 'ZEC/ETH', granularity: '1000000' },\n  12: { name: 'TRX/ETH', granularity: '1000000' },\n  13: { name: 'XRP/USD', granularity: '1000000' },\n  14: { name: 'XMR/ETH', granularity: '1000000' },\n  15: { name: 'ATOM/USD', granularity: '1000000' },\n  16: { name: 'LTC/USD', granularity: '1000000' },\n  17: { name: 'WAVES/BTC', granularity: '1000000' },\n  18: { name: 'REP/BTC', granularity: '1000000' },\n  19: { name: 'TUSD/ETH', granularity: '1000000' },\n  20: { name: 'EOS/USD', granularity: '1000000' },\n  21: { name: 'IOTA/USD', granularity: '1000000' },\n  22: { name: 'ETC/USD', granularity: '1000000' },\n  23: { name: 'ETH/PAX', granularity: '1000000' },\n  24: { name: 'ETH/BTC', granularity: '1000000' },\n  25: { name: 'USDC/USDT', granularity: '1000000' },\n  26: { name: 'XTZ/USD', granularity: '1000000' },\n  27: { name: 'LINK/USD', granularity: '1000000' },\n  28: { name: 'ZRX/BNB', granularity: '1000000' },\n  29: { name: 'ZEC/USD', granularity: '1000000' },\n  30: { name: 'XAU/USD', granularity: '1000000' },\n  31: { name: 'MATIC/USD', granularity: '1000000' },\n  32: { name: 'BAT/USD', granularity: '1000000' },\n  33: { name: 'ALGO/USD', granularity: '1000000' },\n  34: { name: 'ZRX/USD', granularity: '1000000' },\n  35: { name: 'COS/USD', granularity: '1000000' },\n  36: { name: 'BCH/USD', granularity: '1000000' },\n  37: { name: 'REP/USD', granularity: '1000000' },\n  38: { name: 'GNO/USD', granularity: '1000000' },\n  39: { name: 'DAI/USD', granularity: '1000000' },\n  40: { name: 'STEEM/BTCUPCE', granularity: '1000000' },\n  41: { name: 'USPCE', granularity: '1000000' },\n  42: { name: 'BTC/USD', granularity: '1000000' },\n  43: { name: 'TRB/ETH', granularity: '1000000' },\n  44: { name: 'BTC/USD', granularity: '1000000' },\n  45: { name: 'TRB/USD', granularity: '1000000' },\n  46: { name: 'ETH/USD', granularity: '1000000' },\n  47: { name: 'BSV/USD', granularity: '1000000' },\n  48: { name: 'MAKER/USD', granularity: '1000000' },\n  49: { name: 'BCH/USD', granularity: '1000000' },\n  50: { name: 'TRB/USD', granularity: '1000000' },\n  51: { name: 'XMR/USD', granularity: '1000000' },\n  52: { name: 'XFT/USD', granularity: '1000000' },\n  53: { name: 'BTCDominance', granularity: '1000000' },\n  54: { name: 'WAVES/USD', granularity: '1000000' },\n  55: { name: 'OGN/USD', granularity: '1000000' },\n  56: { name: 'VIXEOD', granularity: '1000000' },\n  57: { name: 'DEFITVL', granularity: '1000000' },\n  58: { name: 'DEFICAP', granularity: '1000000' },\n  59: { name: 'ETH/JPY', granularity: '1000000' },\n}\n","import { psrLookup } from './psrLookup'\nimport Web3 from 'web3'\n\n\n\nconst eighteenDecimals = 1000000000000000000\n\nconst web3 = new Web3(window.ethereum)\n\nexport const queryDataParsers = {\n  \n  LegacyRequest: (event) => {\n    switch (event.queryId) {\n      case 1:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n        return event\n      case 2:\n        event.decodedValueName = psrLookup[event.queryId].name\n        try {event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n      } catch {\n        event.decodedValue='disputed'\n      }\n        return event\n      case 3:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value === '0x'\n            ? '0'\n            : new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / 1000000)\n        return event\n      case 10:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value.toString().length > 17\n            ? new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / eighteenDecimals)\n            : new Intl.NumberFormat('en-EN', {\n                style: 'currency',\n                currency: 'USD',\n              }).format(event._value / 1000000)\n        return event\n      case 41:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue =\n          event._value.toString().length > 18\n            ? (event._value / eighteenDecimals).toString()\n            : event._value.toString().length > 6\n            ? '*' + (event._value / 1000000).toString()\n            : '*' + event._value.toString()\n        return event\n      case 50:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(event._value / 1000000)\n        return event\n      case 59:\n        event.decodedValueName = psrLookup[event.queryId].name\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'JPY',\n        }).format(event._value / 1000000)\n        return event\n      default:\n        event.decodedValueName = 'New Legacy Type'\n        event.decodedValue = '0'\n        return event\n    }\n  },\n  MimicryNFTMarketIndex: (event) => {\n    event.decodedValueName = `MIMICRY NFT INDEX (${event.queryDataObj[0].slice(0,3).toUpperCase()})`\n\n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n\n  MimicryMacroMarketMashup: (event) => {\n    console.log(event);\n\n    event.decodedValueName = `MIMICRY NFT MASHUP (${event.queryDataObj[3][0][1].toUpperCase()})`\n    const valueInWei = parseInt(event._value, 16) / 1;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  MimicryCollectionStat : (event) => {\n    event.decodedValueName = `MimicryCollectionStat ${event.queryDataObj[0].toUpperCase()} ${event.queryDataObj[1]} ${event.queryDataObj[2]}`\n    \n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  AmpleforthCustomSpotPrice: (event) => {\n    event.decodedValueName = `AMPL/USD`\n\n    const valueInWei = parseInt(event._value, 16) / 10 ** 18;\n    const formattedValue = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(valueInWei);\n    event.decodedValue = formattedValue;\n    return event;\n  },\n  \n  FileCID: (event) => {\n    event.decodedValueName = `FileCID`;\n  \n    // Extracting the first 3 and last 3 characters of event._value\n    const value = event._value;\n    const firstThree = value.substring(0, 4);\n    const lastThree = value.substring(64, 68);\n    event.decodedValue = firstThree + '...' + lastThree + '...';\n    return event;\n  },\n  EVMBalanceCurrent: (event) => {\n    console.log(event);\n    event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0];\n  \n    // Decode the provided string to get the two uint256 values\n    const decodedValues = web3.eth.abi.decodeParameters(['uint256', 'uint256'], event._value);\n  \n    // Convert it from Wei to Ether\n    const valueInEther = web3.utils.fromWei(decodedValues[0], 'ether');\n    \n    // Trim the value to 4 decimal places and convert it back to a number\n    const trimmedValue = parseFloat(valueInEther).toFixed(6);\n    \n // Check if queryDataObj[0] equals '80001' and map it to 'MATIC', otherwise use its original value\n const chainName = event.queryDataObj[0] === '80001' ? ' MATIC' : ' chainId:' + event.queryDataObj[0];\n  \n // Append the mapped chain name to the trimmed value\n event.decodedValue = trimmedValue  + chainName ; // Concatenate the values    return event;\n  },\n  BTCBalanceCurrent: (event) => {\n    event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0];\n  \n    // Decode the provided string to get the two uint256 values\n    const decodedValues = web3.eth.abi.decodeParameters(['uint256', 'uint256'], event._value);\n  \n    // Convert it from Wei to Ether\n    const valueInEther = web3.utils.fromWei(decodedValues[0], 'ether');\n    \n    // Trim the value to 4 decimal places and convert it back to a number\n    const trimmedValue = parseFloat(valueInEther).toFixed(6);\n  \n // Append the mapped chain name to the trimmed value\n event.decodedValue = trimmedValue  + ' BTC' ; // Concatenate the values    return event;\n  },\n  StringQuery: (event) => {\n    event.decodedValueName = `${event.queryDataObj[0]}`\n  // Decode the hexadecimal string to ASCII\n  const decodedString = web3.utils.hexToAscii(event._value);\n\n  // Remove non-printable characters using a safe regular expression\n  event.decodedValue = decodedString.replace(/[^\\x20-\\x7E]/g, '').trim();\n\n  return event;\n  },\n\n\n  /*DivaPool : (event) => {\n    event.decodedValueName = `DivaPool`;\n    event.decodedValue = `${event.queryDataObj[0]}`;\n    return event;\n  },*/\n  \n  EVMCall : (event) => {\n    event.decodedValueName = `EVMCall`;\n\n    // Directly assign the raw data to decodedValue\n    event.decodedValue = 'Chain id:' + event.queryDataObj[0] || \"No Data Available\";\n\n    return event;\n  },\n\n  \n  SpotPrice: (event) => {\n    console.log(event)\n    switch (event.queryId) {\n\n      case 5:\n        event.decodedValueName = `${event.queryDataObj.asset}/${event.queryDataObj.currency}`\n        event.decodedValue = parseInt(Number(event._value), 10)\n        if (event.decodedValue % 1 === 0 || event.decodedValue.toFixed(2).slice(-2) === '00') {\n          event.decodedValue = parseInt(event.decodedValue, 10);\n        }\n  \n        return event\n      default:\n        event.decodedValueName = 'New SpotPrice Type'\n        event.decodedValue = '0'\n        return event\n    }\n  },\n  SpotPriceProper: (event) => {\n    switch (event.queryDataObj[0]) {\n      case 'ohm':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = `${\n          parseInt(Number(event._value), 10) / eighteenDecimals\n        }`\n        return event\n      case 'dai':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = `$${(\n          parseInt(Number(event._value), 10) / eighteenDecimals\n        ).toString()}`\n        return event\n      case 'ric':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'bct':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'mkr':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(event._value) / eighteenDecimals)\n        return event\n      case 'usdc':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'vsq':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'idle':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'sushi':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      /*case 'pepe':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          const value = parseInt(Number(event._value), 10) / eighteenDecimals\n          const options = {\n            style: 'currency',\n            currency: 'USD',\n          }\n            options.minimumFractionDigits = 6\n            options.maximumFractionDigits = 6\n            event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n        return event*/\n      case 'matic':\n        event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n        event.decodedValue = new Intl.NumberFormat('en-EN', {\n          style: 'currency',\n          currency: 'USD',\n        }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n        return event\n      case 'eur':\n          event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          event.decodedValue = new Intl.NumberFormat('en-EN', {\n            style: 'currency',\n            currency: 'USD',\n          }).format(parseInt(Number(event._value), 10) / eighteenDecimals)\n          return event\n      case 'steth':\n        if (event.queryDataObj[1] === 'btc') {\n          event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n          const value = parseInt(Number(event._value), 10) / eighteenDecimals\n          const options = {\n            style: 'currency',\n            currency: 'BTC',\n          }\n            options.minimumFractionDigits = 6\n            options.maximumFractionDigits = 6\n            event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n\n          }\n      if (event.queryDataObj[1] === 'usd') {\n          let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n          event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n          event.decodedValue = new Intl.NumberFormat('en-EN', {\n            style: 'currency',\n            currency: queryData[1].toUpperCase(),\n          }).format(Number(event._value) / eighteenDecimals)\n      }\n            return event\n            case 'oeth':\n              if (event.queryDataObj[1] === 'eth') {\n                event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n                const value = parseInt(Number(event._value), 10) / eighteenDecimals\n                const options = {\n                  style: 'decimal',\n                  minimumFractionDigits: 6,\n                  maximumFractionDigits: 6\n                }\n                event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value) + ' ETH'\n              }\n              if (event.queryDataObj[1] === 'usd') {\n                let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n                event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n                event.decodedValue = new Intl.NumberFormat('en-EN', {\n                  style: 'currency',\n                  currency: queryData[1].toUpperCase(),\n                }).format(Number(event._value) / eighteenDecimals)\n              }\n              return event\n      case 'wsteth':\n        if (event.queryDataObj[1] === 'eth') {\n            event.decodedValueName = `${event.queryDataObj[0].toUpperCase()}/${event.queryDataObj[1].toUpperCase()}`\n            const value = parseInt(Number(event._value), 10) / eighteenDecimals\n            const options = {\n              style: 'currency',\n              currency: 'ETH',\n            }\n              options.minimumFractionDigits = 6\n              options.maximumFractionDigits = 6\n              event.decodedValue = new Intl.NumberFormat('en-EN', options).format(value)\n\n            }\n        if (event.queryDataObj[1] === 'usd') {\n            let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1])\n            event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`\n            event.decodedValue = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n            }).format(Number(event._value) / eighteenDecimals)\n        }\n        return event\n\n          \n        default:\n          let queryData = web3.eth.abi.decodeParameters(['string', 'string'], web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[1]);\n          event.decodedValueName = `${queryData[0].toUpperCase()}/${queryData[1].toUpperCase()}`;\n          let value = Number(event._value) / eighteenDecimals;\n        \n          // Format the number with 7 decimals if it includes '.00', otherwise use Intl.NumberFormat with currency style\n          if (value.toFixed(2).includes('.00')) {\n            let currencySymbol = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 0,\n            }).formatToParts(0).find(part => part.type === 'currency').value;\n        \n            event.decodedValue = value.toFixed(18);\n            if (/\\.0+$/.test(event.decodedValue)) {\n              event.decodedValue = event.decodedValue.replace(/\\.0+$/, '');\n            }\n            event.decodedValue = currencySymbol  + event.decodedValue;\n          } else {\n            event.decodedValue = new Intl.NumberFormat('en-EN', {\n              style: 'currency',\n              currency: queryData[1].toUpperCase(),\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            }).format(value);\n          }\n        \n          return event;\n        \n  }\n  },\n  // Snapshot: (event) => {\n  //   switch (event) {\n  //     case '1':\n  //       event.decodedValueName = `SPID: ${event.snapshotProposalId}`\n  //       event.decodedValue = `[${event.tempValues[0]}, ${event.tempValues[1]}]`\n  //       return event\n  //     default:\n  //       event.decodedValueName = 'New Snapshot Type'\n  //       event.decodedValue = '0'\n  //       return event\n  //   }\n  // },*/\n  Default: (event) => {\n    switch (event._value.length) {\n      case 66:\n        event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0]\n        event.decodedValue =  parseInt(event._value)/eighteenDecimals\n        return event\n      default:\n        event.decodedValueName = web3.eth.abi.decodeParameters(['string', 'bytes'], event._queryData)[0]\n        event.decodedValue = '0'\n        return event\n    }\n  },\n}","import minABI from './minimumABI.json'\nimport Web3 from 'web3'\nimport { queryDataParsers } from './queryDataParsers'\n//Globals\nconst web3 = new Web3(window.ethereum)\n\nconst tellorAddressMainnet = '0x88dF592F8eb5D7Bd38bFeF7dEb0fBc02cf3778a0'\nconst tellorAddressPolygon = '0xE3322702BEdaaEd36CdDAb233360B939775ae5f1'\nconst tellorAddressMumbai = '0xce4e32fe9d894f8185271aa990d2db425df3e6be'\nconst tellorAddressGoerli = '0xB3B662644F8d3138df63D2F43068ea621e2981f9'\nconst tellorAddressArbone = '0xd58D345Fd9c82262E087d2D0607624B410D88242'\n\nconst getDate = (timestamp) => {\n  const months = {\n    Jan: '01',\n    Feb: '02',\n    Mar: '03',\n    Apr: '04',\n    May: '05',\n    Jun: '06',\n    Jul: '07',\n    Aug: '08',\n    Sep: '09',\n    Oct: '10',\n    Nov: '11',\n    Dec: '12',\n  }\n  const date = new Date(timestamp * 1000).toString()\n  const dateArr = date.split(' ')\n  const finalDate = `${dateArr[2]}/${months[dateArr[1]]}/${dateArr[3]}, ${\n    dateArr[4]\n  }`\n  return finalDate\n}\n\nconst hex2a = (hexx) => {\n  let hex = hexx.toString() //force conversion\n  let str = ''\n  for (let i = 0; i < hex.length; i += 2)\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n\n  return str.substring(1)\n}\n\nexport const truncateAddr = (addr) => {\n  return addr.slice(0, 6) + '...' + addr.slice(-4)\n}\n\nexport const getAssetBalances = async (web3, address, chainId) => {\n  //Instantiating Contracts\n  const trbContractEthereum = new web3.eth.Contract(\n    minABI,\n    tellorAddressMainnet\n  )\n  const trbContractPolygon = new web3.eth.Contract(minABI, tellorAddressPolygon)\n  const trbContractMumbai = new web3.eth.Contract(minABI, tellorAddressMumbai)\n  const trbContractGoerli = new web3.eth.Contract(minABI, tellorAddressGoerli)\n  const trbContractArbone = new web3.eth.Contract(minABI, tellorAddressArbone)\n  //Function Globals\n  let chainMainTokenBalance\n  let trbBalance\n\n  switch (chainId) {\n    case 1:\n      //Main Chain Balance - ETHEREUM MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 4:\n      //Main Chain Balance - RINKEBY\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractEthereum.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 5:\n      //Main Chain Balance - GOERLI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractGoerli.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n      case 42161:\n        //Main Chain Balance - ARBITRUM ONE\n        chainMainTokenBalance = web3.utils.fromWei(\n          await web3.eth.getBalance(address)\n        )\n        trbBalance = await trbContractArbone.methods\n          .balanceOf(address)\n          .call()\n          .then((res) => web3.utils.fromWei(res))\n        //Add more assets here if needed\n        return {\n          main: Math.round(chainMainTokenBalance * 100) / 100,\n          trb: Math.round(trbBalance * 100) / 100,\n        }\n        case 137:\n      //Main Chain Balance - MATIC/POLYGON MAINNET\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractPolygon.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    case 80001:\n      //Main Chain Balance - MUMBAI\n      chainMainTokenBalance = web3.utils.fromWei(\n        await web3.eth.getBalance(address)\n      )\n      trbBalance = await trbContractMumbai.methods\n        .balanceOf(address)\n        .call()\n        .then((res) => web3.utils.fromWei(res))\n      //Add more assets here if needed\n      return {\n        main: Math.round(chainMainTokenBalance * 100) / 100,\n        trb: Math.round(trbBalance * 100) / 100,\n      }\n    default:\n      return null\n  }\n}\n\nexport const sortDataByProperty = (prop, arr) => {\n  arr.sort(function (a, b) {\n    if (a[prop] < b[prop]) {\n      return 1\n    } else if (a[prop] > b[prop]) {\n      return -1\n    } else {\n      return 0\n    }\n  })\n  return arr\n}\n\nexport const decodingAutopayMiddleware = (autopayEvents) => {\n  try {\n\n  //console.log(autopayEvents)\n  let decoded = autopayEvents.map((event) => {\n    let queryDataPartial\n    let queryData\n    let finalQueryData\n    if (event.divaPayQuery || event.divaPayAdaptorQuery) {\n      if (event.referenceAsset !== undefined) {\n        event.decodedValue = event.referenceAsset;\n      } else {\n        event.decodedValue = '0';\n        console.error(\"referenceAsset is missing for event:\", event);\n      }\n    }\n  \n    event.interval = event._interval ? `${(event._interval / 60 / 60)} hour(s)  ` : 'One-Time Tip'\n    //console.log(event._interval)\n    event.tip = event._reward ? web3.utils.fromWei(event._reward.toString() ?? '0') + ' TRB' : web3.utils.fromWei(event._amount?.toString()  ?? '0').slice(0,6) + ' TRB' \n    event.tips = event.tip\n    event.balance = event._balance ? web3.utils.fromWei(event._balance.toString() ?? '0').slice(0,7) + ' TRB' : '-'\n    event.multipliedValue = event.amount ? (Number(event.amount).toFixed(7))+ (event.settlementFee * event.collateralBalanceGross) +  event.tippingToken: '0';    //console.log(event.event.tippingToken);\n    event.startTime = getDate(event._startTime)\n    event.window = event._window\n    event.symbols = event._queryData\n    event.symbol = ''\n    event.floor = event.floor || 0; // Assign a default value of 0 if event.floor is falsy\n    event.expiryTime = getDate(event.expiryTime)\n    if (event.collateralToken){\n      event.symbol = event.collateralToken.symbol\n    }\n  \n    if (event._queryData && event._queryData.length <= 104) {\n      try {queryData = JSON.parse(hex2a(event._queryData))\n      event.queryDataObj = queryData\n      queryDataParsers[queryData?.type || queryData?.Type || 'Default'](event)\n      } catch {\n        event.queryDataObj='0x'\n      }\n    } \n    if (event._queryData && event._queryData.length > 104) {\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n        \n      )\n      switch (queryDataPartial[0]) {\n        \n        case 'LegacyRequest':\n          event.decodedValue = parseInt(Number(queryDataPartial[1]), 10)\n          queryDataParsers[queryDataPartial[0] || 'Default'](event)\n          break\n        case 'SpotPrice':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n\n        case 'MimicryNFTMarketIndex':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `MIMICRY_NFTINDX ${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n        case 'MimicryMacroMarketMashup':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string', 'tuple(string, address)[]','(string, string, address)[]'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `MIMICRY_NFTMASH (${finalQueryData[3][0][1].toUpperCase()})`\n          break\n        case 'MimicryCollectionStat':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `Mimicry NFT STAT ${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n          break\n        case 'DivaPool':\n            finalQueryData = queryDataPartial[1].data.pools[0]\n            event.queryDataObj = finalQueryData\n            event.decodedValue = finalQueryData.proposedFinalReferenceValue\n            event.pool = {\n              id: finalQueryData.pool.id.toUpperCase()\n            }\n            break\n        case 'DivaFeeRecipients':\n          finalQueryData = queryDataPartial[1].data.feeRecipients[0]\n          event.queryDataObj = finalQueryData\n          event.decodedValue = finalQueryData.collateralTokens\n          event.feeRecipient = {\n            id: finalQueryData.feeRecipient.id.toUpperCase()\n          }\n          break\n        case 'EVMCall':\n              try {\n                // Log the raw data to console for inspection\n                //console.log(\"Raw EVMCall data:\", queryDataPartial[1]);\n\n                // Attempt to decode the transaction\n                finalQueryData = web3.eth.abi.decodeParameters(['uint'], queryDataPartial[1]);\n                event.decodedValue = `EVMCall ${finalQueryData[0]}`;\n              } catch (error) {\n                //console.error(\"Error decoding EVMCall data:\", error, \"Raw data:\", queryDataPartial[1]);\n                // Optionally, set a flag or a specific value to indicate a decoding error\n                event.decodedValue = \"Decoding Error\";\n                // Continue to the next transaction without throwing the error\n                return event;\n  }\n  return event;\n        /*case 'GasPriceOracle':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['SpotPriceProper' || 'Default'](event)\n          break*/\n        case 'CurrencyExchangeRate':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string', 'string'],\n              queryDataPartial[1]\n            )\n            event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n            break\n        //These will not be shown: https://github.com/tellor-io/dataSpecs/blob/main/types/NumericApiResponse.md\n        default:\n          event.decodedValue = 'NumericApiResponse'\n          return event\n      }\n    }\n    return event\n  })\n\n\n\n\n  let filtered = [];\n  decoded.map((event) => {\n    if(event.decodedValue === 'NumericApiResponse'){\n      return;\n    } else {\n      filtered.push(event);\n    }\n  })\n  //console.log('filtered', filtered);\n  return filtered;\n} catch (error) {\n  console.error(\"Error decoding data:\", error);\n  // Handle the error appropriately\n  // You might want to return an empty array or a default value depending on your application's needs\n  return [];\n}\n}\n\n\nexport const getCollateralTokenSymbol = (token) => {\n  return token.collateralToken.symbol;\n}\n\nexport const decodingMiddleware = (reportEvents) => {\n  let decoded = reportEvents.map((event) => {\n    let queryData\n    let queryDataPartial\n    let finalQueryData\n    let temp\n    event.id = event.id + event._nonce + event.chain.split(' ')[0]\n    event.decodedTime = getDate(event._time)\n    event.decodedReporter = web3.utils.toChecksumAddress(event._reporter)\n    event.queryId = parseInt(Number(event._queryId), 10)\n\n    try {\n      // The following line is where the overflow error might occur\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n      );\n    \n    if (event._queryData && event._queryData.length <= 104) {\n      try {queryData = JSON.parse(hex2a(event._queryData))\n      event.queryDataObj = queryData\n      queryDataParsers[queryData?.type || queryData?.Type || 'Default'](event)\n      } catch {\n        event.queryDataObj='0x'\n      }\n    } else if (event._queryData && event._queryData.length > 104) {\n      queryDataPartial = web3.eth.abi.decodeParameters(\n        ['string', 'bytes'],\n        event._queryData\n      )\n      switch (queryDataPartial[0]) {\n        case 'LegacyRequest':\n          event.queryId = parseInt(Number(queryDataPartial[1]), 10)\n          queryDataParsers[queryDataPartial[0] || 'Default'](event)\n          break\n        case 'AmpleforthCustomSpotPrice':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['AmpleforthCustomSpotPrice' || 'Default'](event)\n          break\n        case 'StringQuery':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n        \n          // Assign the decoded string to queryDataObj\n          event.queryDataObj = finalQueryData\n          queryDataParsers['StringQuery' || 'Default'](event)\n          break\n        case 'FileCID':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string'],\n              queryDataPartial[1]\n            )\n            event.queryDataObj = finalQueryData\n            queryDataParsers['FileCID' || 'Default'](event)\n          break\n        case 'SpotPrice':\n\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string', 'string'],\n            queryDataPartial[1]\n          )\n          event.queryDataObj = finalQueryData\n          queryDataParsers['SpotPriceProper' || 'Default'](event)\n          break\n        case 'EVMBalanceCurrent':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['uint256', 'address'],\n            queryDataPartial[1]\n          )\n          console.log(finalQueryData)\n          event.queryDataObj = finalQueryData\n          queryDataParsers['EVMBalanceCurrent' || 'Default'](event)\n          break\n          case 'BTCBalanceCurrent':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['uint256', 'address'],\n              queryDataPartial[1]\n            )\n            //console.log(finalQueryData)\n            event.queryDataObj = finalQueryData\n            queryDataParsers['BTCBalanceCurrent' || 'Default'](event)\n            break\n        case 'DivaPay':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n          event.decodedValue = `DivaPay ${finalQueryData[0]}`\n          break\n      case 'MimicryNFTMarketIndex':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string'],\n          queryDataPartial[1]\n        )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['MimicryNFTMarketIndex' || 'Default'](event)\n          break\n      case 'MimicryMacroMarketMashup':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string', 'tuple(string, address)[]','tuple(string, string, address)[]'],\n             queryDataPartial[1]\n          )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['MimicryMacroMarketMashup' || 'Default'](event)\n              break\n      case 'EVMCall':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['uint256', 'address', 'bytes'],\n             queryDataPartial[1]\n          )\n          //console.log(\"EVMCall decoded data:\", finalQueryData); // This line logs the decoded data\n\n        event.queryDataObj = finalQueryData\n        queryDataParsers['EVMCall' || 'Default'](event)\n              break\n      /*case 'DivaPool':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string', 'tuple(string, address)[]','tuple(string, string, address)[]'],\n            queryDataPartial[1]\n          )\n        event.queryDataObj = finalQueryData\n        queryDataParsers['DivaPool' || 'Default'](event)\n              break*/\n      /*case 'GasPriceOracle':\n        finalQueryData = web3.eth.abi.decodeParameters(\n          ['string', 'string'],\n          queryDataPartial[1]\n        )\n        event.decodedValue = `${finalQueryData[0].toUpperCase()}/${finalQueryData[1].toUpperCase()}`\n            break*/ \n        case 'CurrencyExchangeRate':\n            finalQueryData = web3.eth.abi.decodeParameters(\n              ['string', 'string'],\n              queryDataPartial[1]\n            )\n            event.queryDataObj = finalQueryData\n            queryDataParsers['EUR/USD' || 'Default'](event)\n            break\n        case 'TellorRNG':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['uint'],\n            queryDataPartial[1]\n          )\n          temp = web3.eth.abi.decodeParameters(\n            ['uint256'],\n            event._value\n          )\n          event.feedType = 'TellorRNG'\n          event.decodedValueName = `TellorRNG`\n          let t1  = `[${temp[0]}]`\n          event.decodedValue = t1.slice(1,7) + \"...\"\n          return event\n        case 'Snapshot':\n          finalQueryData = web3.eth.abi.decodeParameters(\n            ['string'],\n            queryDataPartial[1]\n          )\n          event.snapshotProposalId = parseInt(finalQueryData[0])\n          temp = web3.eth.abi.decodeParameters(\n            ['bool'],\n            event._value\n          )\n          event.feedType = 'Snapshot'\n          event.decodedValueName = `Snap: ${event.snapshotProposalId}`\n          event.decodedValue = `[${temp[0]}]`\n          return event\n        // queryDataParsers['Snapshot' || 'Default'](event)\n        // break\n        default:\n          queryDataParsers['Default'](event)\n          return event\n      }\n    }\n\n  } catch (error) {\n    console.error(\"Error decoding data for event:\", event, error);\n    // Handle the error, e.g., by setting a default error message or value\n    event.decodedValue = \"Decoding Error\";\n    // Optionally, you can add more error-specific handling here\n  }\n  return event;\n});\n\n// Filter out or keep events with decoding errors based on your needs\n// For example, to exclude them:\n// let filteredDecoded = decoded.filter(event => event.decodedValue !== \"Decoding Error\");\n\nreturn decoded; // Or return filteredDecoded if you filtered the list\n}\n ","import React, { useEffect, useRef, useState, useContext, useCallback } from 'react'\nimport '../styles/Table.css'\nimport { ReactComponent as FilterIcon } from '../assets/filter_outline.svg'\nimport { ReactComponent as FilterIconFilled } from '../assets/filter.svg'\nimport { ReactComponent as Checked } from '../assets/done.svg'\n//Icons\nimport { Jazzicon } from '@ukstv/jazzicon-react'\n//Utils\nimport { truncateAddr } from '../utils/helpers'\n//Contexts\nimport { ModeContext } from '../contexts/Mode'\n\nfunction Table({ data, allData, setFiltering }) {\n  //Component State\n  const [tableData, setTableData] = useState([])\n  //\n  const [symbolClicked, setSymbolClicked] = useState(false)\n  const [chainClicked, setChainClicked] = useState(false)\n  const [reporterClicked, setReporterClicked] = useState(false)\n  const [dateClicked, setDateClicked] = useState(false)\n  //\n  const [reportedSymbols, setReportedSymbols] = useState(null)\n  const [reportedChains, setReportedChains] = useState(null)\n  const [reportedReporters, setReportedReporters] = useState(null)\n  const [reportedDates, setReportedDates] = useState(null)\n  const [symbolSearchTerm, setSymbolSearchTerm] = useState(\"\");\n  const [reporterSearchTerm, setReporterSearchTerm] = useState(\"\");\n  const [startDateSearchTerm, setStartDateSearchTerm] = useState(\"\");\n  const [endDateSearchTerm, setEndDateSearchTerm] = useState(\"\");\n  //\n  const [allFilters, setAllFilters] = useState([])\n  const [symbolFilters, setSymbolFilters] = useState([])\n  const [chainFilters, setChainFilters] = useState([])\n  const [reporterFilters, setReporterFilters] = useState([])\n  const [dateFilters, setDateFilters] = useState([])\n  //Refs\n  const symbolRef = useRef()\n  const chainRef = useRef()\n  const reporterRef = useRef()\n  const dateRef = useRef()\n  const dropdownRef = useRef(null);\n  //Contexts\n  const mode = useContext(ModeContext)\n\n  // Memoize the filter application function\n  const applyFilters = useCallback(() => {\n    if (!allData || !allData.decodedData) return;\n\n    let filteredData = allData.decodedData.filter(event => {\n      const symbolMatch = symbolFilters.length === 0 || symbolFilters.includes(event.decodedValueName);\n      const chainMatch = chainFilters.length === 0 || chainFilters.includes(event.chain);\n      const reporterMatch = reporterFilters.length === 0 || reporterFilters.includes(event.decodedReporter);\n      \n      let startDate = new Date(startDateSearchTerm);\n      let endDate = new Date(endDateSearchTerm);\n      let eventDate = new Date(event.decodedTime.split(',')[0].trim().split('/').reverse().join('-'));\n\n      const dateMatch = startDateSearchTerm && endDateSearchTerm ? (eventDate >= startDate && eventDate <= endDate) : dateFilters.length === 0 || dateFilters.some(filterDate => event.decodedTime.startsWith(filterDate));\n  \n      return symbolMatch && chainMatch && reporterMatch && dateMatch;\n    });\n\n    const areFiltersApplied = symbolFilters.length > 0 || chainFilters.length > 0 || reporterFilters.length > 0 || dateFilters.length > 0 || (startDateSearchTerm && endDateSearchTerm);\n  \n    setTableData(areFiltersApplied ? filteredData : filteredData.slice(0, 6));\n    setFiltering(filteredData.length > 0);\n  }, [allData, symbolFilters, chainFilters, reporterFilters, dateFilters, startDateSearchTerm, endDateSearchTerm, setFiltering]);\n\n  // Effect for initial data load and updates\n  useEffect(() => {\n    if (!data) return;\n    setTableData(data);\n  }, [data]);\n\n  // Effect for populating filter options\n  useEffect(() => {\n    if (!allData || !allData.decodedData) return;\n    \n    const symbols = new Set();\n    const chains = new Set();\n    const reporters = new Set();\n    const dates = new Set();\n\n    allData.decodedData.forEach((event) => {\n      if (event.decodedValueName) {\n        if (event.feedType === 'Snapshot') {\n          symbols.add('Snapshot');\n        } else if (!event.feedType) {\n          symbols.add(event.decodedValueName);\n        }\n      }\n      if (event.chain) chains.add(event.chain);\n      if (event.decodedReporter) reporters.add(event.decodedReporter);\n      if (event.decodedTime) dates.add(event.decodedTime.split(',')[0].trim());\n    });\n\n    setReportedSymbols(Array.from(symbols));\n    setReportedChains(Array.from(chains));\n    setReportedReporters(Array.from(reporters));\n    setReportedDates(Array.from(dates));\n  }, [allData]);\n\n  // Effect to apply filters when they change\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  // Modify handleFilterApply to use the memoized applyFilters function\n  const handleFilterApply = useCallback(() => {\n    applyFilters();\n  }, [applyFilters]);\n\n  //Handlers\n  const handleClick = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(true)\n        symbolRef.current.classList.add('display')\n        break\n      case 'chain':\n        setChainClicked(true)\n        chainRef.current.classList.add('display')\n        break\n      case 'reporter':\n        setReporterClicked(true)\n        reporterRef.current.classList.add('display')\n        break\n      case 'date':\n        setDateClicked(true)\n        dateRef.current.classList.add('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleClose = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(false)\n        symbolRef.current.classList.remove('display')\n        break\n      case 'chain':\n        setChainClicked(false)\n        chainRef.current.classList.remove('display')\n        break\n      case 'reporter':\n        setReporterClicked(false)\n        reporterRef.current.classList.remove('display')\n        break\n      case 'date':\n        setDateClicked(false)\n        dateRef.current.classList.remove('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilter = (filterType, filterValue) => {\n    let temp\n    let allFiltersTemp\n    let allFiltersObj = { filterType: filterType, filterValue: filterValue }\n\n    switch (filterType) {\n      case 'symbol':\n        if (symbolFilters.includes(filterValue)) {\n          temp = symbolFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setSymbolFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setSymbolFilters([...symbolFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'chain':\n        if (chainFilters.includes(filterValue)) {\n          temp = chainFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setChainFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setChainFilters([...chainFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'reporter':\n        if (reporterFilters.includes(filterValue)) {\n          temp = reporterFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setReporterFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setReporterFilters([...reporterFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'date':\n        if (dateFilters.includes(filterValue)) {\n          temp = dateFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setDateFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setDateFilters([...dateFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterClear = (filterType) => {\n    let cleared\n    switch (filterType) {\n      case 'symbol':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        //handleFilterApply()\n        setSymbolFilters([])\n        break\n      case 'chain':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply()\n        setChainFilters([])\n        break\n      case 'reporter':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply()\n        setReporterFilters([])\n        break\n        case 'date':\n          cleared = allFilters.filter(\n            (filters) => filters.filterType !== filterType\n          )\n          setAllFilters(cleared)\n          setStartDateSearchTerm(\"\") // Clear the start date search term\n          setEndDateSearchTerm(\"\") // Clear the end date search term\n          handleFilterApply()\n          setDateFilters([])\n          break\n        default:\n          return\n    }\n  }\n  const handleRowClick = (txnLink) => {\n    window.open(txnLink, '_blank').focus()\n  }\n\n  const formatSymbol = (symbol) => {\n    if (symbol === 'SUPEROETHB/ETH') {\n      return 'SUPER OETHb/ETH';\n    }\n    return symbol;\n  };\n\n  const formatValue = (value) => {\n    if (typeof value === 'string' && value.startsWith('ETH')) {\n      const numericPart = value.substring(3).trim(); // Remove 'ETH' and any leading space\n      return `${numericPart} ETH`;\n    }\n    return value;\n  };\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setSymbolClicked(false);\n        setChainClicked(false);\n        setReporterClicked(false);\n        setDateClicked(false);\n        symbolRef.current?.classList.remove('display');\n        chainRef.current?.classList.remove('display');\n        reporterRef.current?.classList.remove('display');\n        dateRef.current?.classList.remove('display');\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <table className=\"Table\">\n      <thead className=\"TableHeaders\">\n        <tr className=\"TH__Header\">\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>SYMBOLS</h1>\n              {symbolClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setSymbolClicked(!symbolClicked)}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setSymbolClicked(!symbolClicked)}\n                />\n              )}\n            </div>\n            <div\n              className={`TableFilterDropdown ${mode.mode === 'dark' ? '' : 'TableFilterDropdownDark'}`}\n              ref={(el) => {\n                symbolRef.current = el;\n                if (symbolClicked) dropdownRef.current = el;\n              }}\n              style={{ \n                display: symbolClicked ? 'flex' : 'none',\n                flexDirection: 'column',\n                maxHeight: '300px',\n                overflowY: 'auto'\n              }}\n            >\n              <h3>filter by symbol</h3>\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={symbolSearchTerm}\n                onChange={(e) => setSymbolSearchTerm(e.target.value)}\n              />\n              <div className=\"DropdownResults\" style={{ flexGrow: 1, overflowY: 'auto' }}>\n                {reportedSymbols &&\n                  reportedSymbols.filter((symbol) => symbol.toLowerCase().includes(symbolSearchTerm.toLowerCase()))\n                  .map((symbol) => (\n                    <div\n                      key={symbol}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('symbol', symbol)}\n                    >\n                      {symbolFilters.includes(symbol) ? (\n                        <>\n                          <p>{symbol}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{symbol}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('symbol')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th>\n            <h1>VALUE</h1>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>CHAIN</h1>\n              {chainClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setChainClicked(!chainClicked)}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setChainClicked(!chainClicked)}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={(el) => {\n                chainRef.current = el;\n                if (chainClicked) dropdownRef.current = el;\n              }}\n              style={{ \n                display: chainClicked ? 'flex' : 'none',\n                flexDirection: 'column',\n                maxHeight: '300px',\n                overflowY: 'auto'\n              }}\n            >\n              <h3>filter by chain</h3>\n              <div className=\"DropdownResults\">\n                {reportedChains &&\n                  reportedChains.map((chain) => (\n                    <div\n                      key={chain}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('chain', chain)}\n                    >\n                      {chainFilters.includes(chain) ? (\n                        <>\n                          <p>{chain}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{chain}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('chain')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>REPORTER</h1>\n              {reporterClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setReporterClicked(!reporterClicked)}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setReporterClicked(!reporterClicked)}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={(el) => {\n                reporterRef.current = el;\n                if (reporterClicked) dropdownRef.current = el;\n              }}\n              style={{ \n                display: reporterClicked ? 'flex' : 'none',\n                flexDirection: 'column',\n                maxHeight: '300px',\n                overflowY: 'auto'\n              }}\n            >\n              <h3>filter by reporter</h3>\n              <input\n  type=\"text\"\n  placeholder=\"Search...\"\n  value={reporterSearchTerm}\n  onChange={(e) => setReporterSearchTerm(e.target.value)}\n/>\n              <div className=\"DropdownResults\">\n                {reportedReporters &&\n  reportedReporters\n  .filter((reporter) => reporter.toLowerCase().includes(reporterSearchTerm.toLowerCase()))\n    .map((reporter) => (\n                    <div\n                      key={reporter}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('reporter', reporter)}\n                    >\n                      {reporterFilters.includes(reporter) ? (\n                        <>\n                          <p>{truncateAddr(reporter)}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{truncateAddr(reporter)}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('reporter')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>DATE(DD/MM/YY), TIME</h1>\n              {dateClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setDateClicked(!dateClicked)}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => setDateClicked(!dateClicked)}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={(el) => {\n                dateRef.current = el;\n                if (dateClicked) dropdownRef.current = el;\n              }}\n              style={{ \n                display: dateClicked ? 'flex' : 'none',\n                flexDirection: 'column',\n                maxHeight: '300px',\n                overflowY: 'auto'\n              }}\n            >\n              <h3>filter by date</h3>\n              <p>Start</p>\n              <input\n                 type=\"date\"\n                 placeholder=\"Start Date...\"\n                 value={startDateSearchTerm}\n                 onChange={(e) => setStartDateSearchTerm(e.target.value)}\n                 className=\"input-date\" // Add this line\n\n               />\n                 <p>End</p>\n              <input\n                 type=\"date\"\n                 placeholder=\"End Date...\"\n                 value={endDateSearchTerm}\n                 onChange={(e) => setEndDateSearchTerm(e.target.value)}\n                 className=\"input-date\" // Add this line\n\n               />\n              <div className=\"DropdownResults\">\n                {reportedDates &&\n                  reportedDates.filter((date) => date.toLowerCase().includes(startDateSearchTerm.toLowerCase()) || date.toLowerCase().includes(endDateSearchTerm.toLowerCase()))\n                  .map((date) => (\n                    <div\n                      key={date}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('date', date)}\n                    >\n                      {dateFilters.includes(date) ? (\n                        <>\n                          <p>{date}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{date}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('date')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData && tableData.length > 0 ? (\n          tableData.map((event) => (\n            <tr\n              key={event.id}\n              className={mode.mode === 'dark' ? 'TableBody' : 'TableBodyDark'}\n              onClick={() => handleRowClick(event.txnLink)}\n            >\n              <td className=\"TB__Symbols\">{formatSymbol(event.decodedValueName)}</td>\n              <td className=\"TB__Value\">{formatValue(event.decodedValue)}</td>\n              <td className=\"TB__Chain\">{event.chain}</td>\n              <td className=\"TB__Reporter\">\n                <Jazzicon\n                  address={event.decodedReporter}\n                  className=\"Table__Jazzicon\"\n                />\n                <p>{truncateAddr(event.decodedReporter)}</p>\n              </td>\n              <td className=\"TB__DateTime\">{event.decodedTime}</td>\n            </tr>\n          ))\n        ) : (\n          <tr className=\"TableBodyNoMatches\">\n            <td>Data Doesn't Match Entries</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table\n","import { gql } from '@apollo/client'\n\nexport const reporterQuery = gql`\n  query {\n    newReportEntities(orderBy: _time, orderDirection: desc) {\n      id\n      _nonce\n      _queryData\n      _queryId\n      _time\n      _value\n      _reporter\n      txnHash\n    }\n  }\n`\n\nexport const reporterWRewardQuery = gql`\n  query {\n    newReportEntities(orderBy: _time, orderDirection: desc) {\n      id\n      _nonce\n      _queryData\n      _queryId\n      _reward\n      _time\n      _value\n      _reporter\n      txnHash\n    }\n  }\n`\n\nexport const autopayQuery = gql`\n  query {\n    dataFeedFundedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _feedId\n      _amount\n      _feedFunder\n    }\n    newDataFeedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _feedId\n      _queryData\n      _feedCreator\n    }\n    oneTimeTipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _amount\n      _reporter\n    }\n    tipAddedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _queryId\n      _amount\n      _queryData\n      _tipper\n      _startTime\n      txnHash\n    }\n    tipClaimedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _feedId\n      _queryId\n      _amount\n      _reporter\n    }\n    dataFeedEntities(orderBy: id, orderDirection: desc) {\n      id\n      _reward\n      _startTime\n      _interval\n      _window\n      _priceThreshold\n      _queryData\n      _balance\n      txnHash\n    }\n    \n  }\n`\n\nexport const divaPayQuery = gql`\n  query {\n    pools(orderBy: id, orderDirection: desc) {\n      id\n      referenceAsset\n      dataProvider\n      settlementFee\n      expiryTime\n      collateralBalanceGross\n      collateralToken {\n        id\n        name\n        symbol\n        decimals\n      }\n    }\n\n    feeRecipients(orderBy: id, orderDirection: desc) {\n    id\n    collateralTokens {\n      amount\n      collateralToken {\n        id\n        name\n        symbol\n        decimals\n      }\n    }\n    }\n  }\n`\n\n\nexport const divaPayAdaptorQuery = gql`\n    query {\n      tipAddeds(orderBy: id, orderDirection: desc) {\n        id\n        poolId\n        tippingToken\n        amount\n        tipper\n        blockNumber\n        blockTimestamp\n        transactionHash\n    }\n  }\n`\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst createClient = (uri) => new ApolloClient({\n  uri,\n  cache: new InMemoryCache()\n});\n\nexport const clientMainnet = createClient('https://api.studio.thegraph.com/query/33329/tellororaclemainhgraph/version/latest');\nexport const clientSepolia = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-sepolia-graph/version/latest');\nexport const clientMatic = createClient('https://api.studio.thegraph.com/query/33329/tellor-flex-matic-graph2/version/latest');\nexport const clientAmoy = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-amoy-test-subgr/version/latest');\nexport const clientArbone = createClient('https://api.studio.thegraph.com/query/33329/tellor-flex-arbitrummain-graph/version/latest');\nexport const clientGnosismain = createClient('https://api.studio.thegraph.com/query/33329/tellor-flex-matic-graph2/version/latest');\nexport const clientOptMain = createClient('https://api.studio.thegraph.com/query/33329/tellor-flex-optmain-graph2/version/latest');\nexport const clientOptTest = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-optimism-testnet/version/latest');\nexport const clientLinea = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-linea-main/v0.0.1');\nexport const clientLineaTest = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-linea-tesnet/version/latest');\nexport const clientPolygonzk = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-polygonzk-main/v0.0.1');\nexport const clientZksyncMain = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-zksync-main-subg/version/latest');\nexport const clientZksyncTest = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-zksync-test-subg/version/latest');\nexport const clientScroll = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-scroll/version/latest');\nexport const clientBase = createClient('https://api.studio.thegraph.com/query/33329/tellor-oracle-base/version/latest');\n","import React, { createContext, useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { reporterQuery } from '../utils/queries'\nimport { sortDataByProperty, decodingMiddleware } from '../utils/helpers'\nimport { \n  clientMainnet, clientSepolia, clientMatic, clientAmoy, clientArbone, \n  clientGnosismain, clientOptMain, clientOptTest, clientLinea, clientLineaTest, \n  clientPolygonzk, clientZksyncMain, clientZksyncTest, clientScroll, clientBase\n} from '../utils/apollo'\n\nexport const GraphContext = createContext()\n\nconst explorerUrls = {\n  mainnet: 'https://etherscan.io/tx/',\n  sepolia: 'https://sepolia.etherscan.io/tx/',\n  matic: 'https://polygonscan.com/tx/',\n  amoy: 'https://amoy.polygonscan.com/tx/',\n  arbone: 'https://arbiscan.io/tx/',\n  gnosismain: 'https://gnosisscan.io/tx/',\n  optMain: 'https://optimistic.etherscan.io/tx/',\n  optTest: 'https://sepolia-optimism.etherscan.io/tx/',\n  linea: 'https://lineascan.build/tx/',\n  lineaTest: 'https://sepolia.lineascan.build/tx/',\n  polygonzk: 'https://zkevm.polygonscan.com/tx/',\n  zksyncMain: 'https://explorer.zksync.io/tx/',\n  zksyncTest: 'https://sepolia.explorer.zksync.io/tx/',\n  scroll: 'https://scrollscan.com/tx/',\n  base: 'https://basescan.org/tx/'\n};\n\nconst networkNames = {\n  mainnet: 'Ethereum Mainnet',\n  sepolia: 'Sepolia Testnet',\n  matic: 'Polygon Mainnet',\n  amoy: 'Amoy Testnet',\n  arbone: 'Arbitrum Mainnet',\n  gnosismain: 'Gnosis Mainnet',\n  optMain: 'Optimism Mainnet',\n  optTest: 'Optimism Testnet',\n  linea: 'Linea Mainnet',\n  lineaTest: 'Linea Testnet',\n  polygonzk: 'Polygon zkEVM Main',\n  zksyncMain: 'ZkSync Mainnet',\n  zksyncTest: 'ZkSync Sepolia',\n  scroll: 'Scroll Mainnet',\n  base: 'Base Mainnet'\n};\n\nconst Graph = ({ children }) => {\n  const [networkData, setNetworkData] = useState({\n    mainnet: { data: null, loading: true, error: null },\n    sepolia: { data: null, loading: true, error: null },\n    matic: { data: null, loading: true, error: null },\n    amoy: { data: null, loading: true, error: null },\n    arbone: { data: null, loading: true, error: null },\n    gnosismain: { data: null, loading: true, error: null },\n    optMain: { data: null, loading: true, error: null },\n    optTest: { data: null, loading: true, error: null },\n    linea: { data: null, loading: true, error: null },\n    lineaTest: { data: null, loading: true, error: null },\n    polygonzk: { data: null, loading: true, error: null },\n    zksyncMain: { data: null, loading: true, error: null },\n    zksyncTest: { data: null, loading: true, error: null },\n    scroll: { data: null, loading: true, error: null },\n    base: { data: null, loading: true, error: null }\n  });\n  const [allGraphData, setAllGraphData] = useState([]);\n  const [decodedData, setDecodedData] = useState([]);\n\n  const useQueryWithTimeout = (query, client, networkName, timeout = 10000) => {\n    const { data, loading, error } = useQuery(query, {\n      client,\n      fetchPolicy: 'network-only',\n      pollInterval: 5000,\n    });\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        if (loading) {\n          setNetworkData(prev => ({\n            ...prev,\n            [networkName]: { ...prev[networkName], loading: false, error: new Error('Timeout') }\n          }));\n        }\n      }, timeout);\n\n      return () => clearTimeout(timer);\n    }, [loading, networkName, timeout]); // Added timeout to the dependency array\n\n    useEffect(() => {\n      setNetworkData(prev => ({\n        ...prev,\n        [networkName]: { data, loading, error }\n      }));\n    }, [data, loading, error, networkName]);\n\n    return { data, loading, error };\n  };\n\n  // Instead, directly call useQueryWithTimeout for each network\n  useQueryWithTimeout(reporterQuery, clientMainnet, 'mainnet');\n  useQueryWithTimeout(reporterQuery, clientSepolia, 'sepolia');\n  useQueryWithTimeout(reporterQuery, clientMatic, 'matic');\n  useQueryWithTimeout(reporterQuery, clientAmoy, 'amoy');\n  useQueryWithTimeout(reporterQuery, clientArbone, 'arbone');\n  useQueryWithTimeout(reporterQuery, clientGnosismain, 'gnosismain');\n  useQueryWithTimeout(reporterQuery, clientOptMain, 'optMain');\n  useQueryWithTimeout(reporterQuery, clientOptTest, 'optTest');\n  useQueryWithTimeout(reporterQuery, clientLinea, 'linea');\n  useQueryWithTimeout(reporterQuery, clientLineaTest, 'lineaTest');\n  useQueryWithTimeout(reporterQuery, clientPolygonzk, 'polygonzk');\n  useQueryWithTimeout(reporterQuery, clientZksyncMain, 'zksyncMain');\n  useQueryWithTimeout(reporterQuery, clientZksyncTest, 'zksyncTest');\n  useQueryWithTimeout(reporterQuery, clientScroll, 'scroll');\n  useQueryWithTimeout(reporterQuery, clientBase, 'base');\n\n  useEffect(() => {\n    const processNetworkData = (networkName, data) => {\n      if (!data || !data.newReportEntities) return [];\n      \n      return data.newReportEntities.map(event => ({\n        ...event,\n        chain: networkNames[networkName],\n        txnLink: `${explorerUrls[networkName]}${event.txnHash}`,\n        uniqueId: `${event.txnHash}-${networkName}`\n      }));\n    };\n\n    const newData = Object.entries(networkData).flatMap(([networkName, { data }]) => \n      processNetworkData(networkName, data)\n    );\n\n    setAllGraphData(prev => {\n      const combined = [...prev, ...newData];\n      const uniqueData = Array.from(new Map(combined.map(item => [item.uniqueId, item])).values());\n      return sortDataByProperty('_time', uniqueData);\n    });\n\n  }, [networkData]);\n\n  useEffect(() => {\n    if (allGraphData.length > 0) {\n      const decoded = decodingMiddleware(allGraphData);\n      setDecodedData(decoded);\n    }\n  }, [allGraphData]);\n\n  return (\n    <GraphContext.Provider value={{ allGraphData, decodedData, networkData }}>\n      {children}\n    </GraphContext.Provider>\n  )\n}\n\nexport default Graph","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles'\n\nconst CustomLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#20f092',\n      secondary: 'rgba(32, 240, 146, 0.2)',\n    },\n  },\n})\n\nexport default function LinearIndeterminate() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{ width: '50%' }}>\n        <CustomLinearProgress />\n      </Box>\n    </ThemeProvider>\n  )\n}\n","import React, { useContext, useEffect, useState, useCallback } from 'react'\nimport '../styles/AllFeeds.css'\nimport Table from './Table'\nimport { GraphContext } from '../contexts/Graph'\nimport { ModeContext } from '../contexts/Mode'\nimport LinearIndeterminate from './LinearIndeterminate'\n\nfunction AllFeeds() {\n  const graphData = useContext(GraphContext)\n  const mode = useContext(ModeContext)\n  const [clippedData, setClippedData] = useState([])\n  const [loadMoreClicks, setLoadMoreClicks] = useState(1)\n  const [viewing, setViewing] = useState(null)\n  const [loadMoreButton, setLoadMoreButton] = useState(true)\n  const [filtering, setFiltering] = useState(false)\n  const [filters, setFilters] = useState({\n    symbolFilters: [],\n    chainFilters: [],\n    reporterFilters: [],\n    dateFilters: [],\n    startDateSearchTerm: \"\",\n    endDateSearchTerm: \"\"\n  })\n\n  useEffect(() => {\n    if (!graphData.decodedData) return;\n    setClippedData(prevData => {\n      const newData = graphData.decodedData.slice(0, 50);\n      return [...newData, ...prevData.filter(item => !newData.some(newItem => newItem.id === item.id))];\n    });\n  }, [graphData.decodedData]);\n\n  const applyFilters = useCallback(() => {\n    if (!clippedData) return;\n\n    let filteredData = clippedData.filter(event => {\n      const symbolMatch = filters.symbolFilters.length === 0 || filters.symbolFilters.includes(event.decodedValueName);\n      const chainMatch = filters.chainFilters.length === 0 || filters.chainFilters.includes(event.chain);\n      const reporterMatch = filters.reporterFilters.length === 0 || filters.reporterFilters.includes(event.decodedReporter);\n      \n      let startDate = new Date(filters.startDateSearchTerm);\n      let endDate = new Date(filters.endDateSearchTerm);\n      let eventDate = new Date(event.decodedTime.split(',')[0].trim().split('/').reverse().join('-'));\n\n      const dateMatch = filters.startDateSearchTerm && filters.endDateSearchTerm ? (eventDate >= startDate && eventDate <= endDate) : filters.dateFilters.length === 0 || filters.dateFilters.some(filterDate => event.decodedTime.startsWith(filterDate));\n  \n      return symbolMatch && chainMatch && reporterMatch && dateMatch;\n    });\n\n    setViewing(filteredData.slice(0, 6 * loadMoreClicks));\n    setFiltering(filteredData.length < clippedData.length);\n    setLoadMoreButton(filteredData.length > 6 * loadMoreClicks);\n  }, [clippedData, filters, loadMoreClicks]);\n\n  useEffect(() => {\n    applyFilters();\n  }, [applyFilters, clippedData]);\n\n  const handleLoadMore = () => {\n    if (!loadMoreButton) return;\n    setLoadMoreClicks(prev => prev + 1);\n  }\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  }\n\n  return (\n    <>\n      {graphData && graphData.decodedData ? (\n        <div className=\"AllFeedsView\">\n          <Table\n            data={viewing}\n            allData={graphData}\n            setFiltering={setFiltering}\n            onFilterChange={handleFilterChange}\n            filters={filters}\n          />\n          <button\n            className={mode.mode === 'dark' ? 'AllFeeds__Button' : 'AllFeeds__ButtonDark'}\n            onClick={handleLoadMore}\n            style={{\n              cursor: loadMoreButton ? 'pointer' : 'not-allowed',\n              display: 'flex',\n            }}\n          >\n            load more\n          </button>\n        </div>\n      ) : (\n        <div className=\"Loading\">\n          <LinearIndeterminate />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default AllFeeds\n","import React, { useEffect, useRef, useState, useContext } from 'react'\nimport '../styles/Table.css'\nimport { ReactComponent as FilterIcon } from '../assets/filter_outline.svg'\nimport { ReactComponent as FilterIconFilled } from '../assets/filter.svg'\nimport { ReactComponent as Checked } from '../assets/done.svg'\nimport LinearIndeterminate from './LinearIndeterminate'\n//Contexts\nimport { ModeContext } from '../contexts/Mode'\n\nfunction TipTable({ data, allData, setFiltering }) {\n  //Component State\n  const [tableData, setTableData] = useState([])\n  //\n  const [symbolClicked, setSymbolClicked] = useState(false)\n  const [chainClicked, setChainClicked] = useState(false)\n  //\n  const [reportedSymbols, setReportedSymbols] = useState(null)\n  const [reportedChains, setReportedChains] = useState(null)\n\n  //\n  const [allFilters, setAllFilters] = useState([])\n  const [symbolFilters, setSymbolFilters] = useState([])\n  const [chainFilters, setChainFilters] = useState([])\n  //Refs\n  const symbolRef = useRef()\n  const chainRef = useRef()\n  //Contexts\n  const mode = useContext(ModeContext)\n\n  useEffect(() => {\n    if (!data) return;\n    setTableData(prevData => {\n      const newData = data.slice(prevData.length);\n      if (JSON.stringify(newData) !== JSON.stringify([])) {\n        return [...prevData, ...newData]\n      }\n      return prevData;\n    })\n  }, [data])\n  \n  useEffect(() => {\n    if (!allData && !allData.decodedData) return\n    let symbols = []\n    let chains = []\n    allData.decodedData.forEach((event) => {\n      if (!symbols.includes(event.decodedValue) && event.decodedValue) {\n        if (event.feedType === 'Snapshot' && !symbols.includes('Snapshot')) {\n          symbols.push('Snapshot')\n        } else if (!event.feedType) {\n          symbols.push(event.decodedValue)\n        }\n      }\n      if (!chains.includes(event.chain)) {\n        chains.push(event.chain)\n      }\n    })\n    setReportedSymbols(symbols)\n    setReportedChains(chains)\n\n    return () => {\n      setReportedSymbols(null)\n      setReportedChains(null)\n    }\n  }, [allData])\n\n  //Handlers\n  const handleClick = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(true)\n        symbolRef.current.classList.add('display')\n        break\n      case 'chain':\n        setChainClicked(true)\n        chainRef.current.classList.add('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleClose = (iconType) => {\n    switch (iconType) {\n      case 'symbol':\n        setSymbolClicked(false)\n        symbolRef.current.classList.remove('display')\n        break\n      case 'chain':\n        setChainClicked(false)\n        chainRef.current.classList.remove('display')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilter = (filterType, filterValue) => {\n    let temp\n    let allFiltersTemp\n    let allFiltersObj = { filterType: filterType, filterValue: filterValue }\n\n    switch (filterType) {\n      case 'symbol':\n        if (symbolFilters.includes(filterValue)) {\n          temp = symbolFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setSymbolFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setSymbolFilters([...symbolFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      case 'chain':\n        if (chainFilters.includes(filterValue)) {\n          temp = chainFilters.filter((filters) => filters !== filterValue)\n          allFiltersTemp = allFilters.filter(\n            (filters) => filters.filterValue !== filterValue\n          )\n          setChainFilters(temp)\n          setAllFilters(allFiltersTemp)\n        } else {\n          setChainFilters([...chainFilters, filterValue])\n          setAllFilters([...allFilters, allFiltersObj])\n        }\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterApply = (filterType, cleared) => {\n    let filteredData = []\n    let symbolFilter = false\n    let symbols = []\n    let chainFilter = false\n    let chains = []\n    //\n    let makesTheCut = []\n\n    if (cleared) {\n      if (cleared.length > 0) {\n        allData.decodedData.forEach((event) => {\n          cleared.forEach((filter) => {\n            if (filter.filterType === 'symbol') {\n              symbolFilter = true\n              if (!symbols.includes(filter.filterValue)) {\n                symbols.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'chain') {\n              chainFilter = true\n              if (!chains.includes(filter.filterValue)) {\n                chains.push(filter.filterValue)\n              }\n            }\n\n            switch (true) {\n              //For all 3 filterTypes\n              case symbolFilter && chainFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    if (\n                      (filter.filterValue === event.decodedValue ||\n                        filter.filterValue === event.feedType) &&\n                      event.chain === chain\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              //For single category filterTypes\n              case symbolFilter:\n                if (\n                  filter.filterValue === event.decodedValue ||\n                  filter.filterValue === event.feedType\n                ) {\n                  filteredData.push(event)\n                }\n                break\n              case chainFilter:\n                if (filter.filterValue === event.chain) {\n                  filteredData.push(event)\n                }\n                break\n              default:\n                return\n            }\n          })\n        })\n        if (makesTheCut.length > 0) {\n          setTableData(makesTheCut)\n        } else {\n          setTableData(filteredData)\n        }\n        setFiltering(true)\n      } else {\n        setTableData(data)\n        setFiltering(false)\n      }\n    } else {\n      if (allFilters.length > 0) {\n        allData.decodedData.forEach((event) => {\n          allFilters.forEach((filter) => {\n            if (filter.filterType === 'symbol') {\n              symbolFilter = true\n              if (!symbols.includes(filter.filterValue)) {\n                symbols.push(filter.filterValue)\n              }\n            } else if (filter.filterType === 'chain') {\n              chainFilter = true\n              if (!chains.includes(filter.filterValue)) {\n                chains.push(filter.filterValue)\n              }\n            }\n\n            switch (true) {\n              //For all 3 filterTypes\n              case symbolFilter && chainFilter:\n                symbols.forEach((symbol) => {\n                  chains.forEach((chain) => {\n                    if (\n                      (event.decodedValue === symbol ||\n                        event.feedType === symbol) &&\n                      event.chain === chain\n                    ) {\n                      if (makesTheCut.includes(event)) {\n                      } else {\n                        makesTheCut.push(event)\n                      }\n                    }\n                  })\n                })\n                break\n              //For single category filterTypes\n              case symbolFilter:\n                if (\n                  filter.filterValue === event.decodedValue ||\n                  filter.filterValue === event.feedType\n                ) {\n                  filteredData.push(event)\n                }\n                break\n              case chainFilter:\n                if (filter.filterValue === event.chain) {\n                  filteredData.push(event)\n                }\n                break\n              default:\n                return\n            }\n          })\n        })\n        if (makesTheCut.length > 0) {\n          setTableData(makesTheCut)\n        } else {\n          setTableData(filteredData)\n        }\n        setFiltering(true)\n      } else {\n        setTableData(data)\n        setFiltering(false)\n      }\n    }\n\n    switch (filterType) {\n      case 'symbol':\n        handleClose('symbol')\n        break\n      case 'chain':\n        handleClose('chain')\n        break\n      default:\n        return\n    }\n  }\n  const handleFilterClear = (filterType) => {\n    let cleared\n    switch (filterType) {\n      case 'symbol':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply('symbol', cleared)\n        setSymbolFilters([])\n        break\n      case 'chain':\n        cleared = allFilters.filter(\n          (filters) => filters.filterType !== filterType\n        )\n        setAllFilters(cleared)\n        handleFilterApply('chain', cleared)\n        setChainFilters([])\n        break\n      default:\n        return\n    }\n  }\n\n  const handleRowClick = (txnLink) => {\n    window.open(txnLink, '_blank').focus()\n  }\n\n  \n\n  return (\n    <table className=\"Table\">\n      <thead className=\"TableHeaders\">\n        <tr className=\"TH__Header\">\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>SYMBOLS</h1>\n              {symbolClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('symbol')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('symbol')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={symbolRef}\n            >\n              <h3>filter by symbol</h3>\n              <div className=\"DropdownResults\">\n                {reportedSymbols &&\n                  reportedSymbols.map((symbol) => (\n                    <div\n                      key={symbol}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('symbol', symbol)}\n                    >\n                      {symbolFilters.includes(symbol) ? (\n                        <>\n                          <p>{symbol}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{symbol}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className=\"DropdownApply\"\n                  onClick={() => handleFilterApply('symbol')}\n                >\n                  Apply\n                </button>\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('symbol')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th>\n            <h1>TIP AMOUNT</h1>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>CHAIN</h1>\n              {chainClicked ? (\n                <FilterIconFilled\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClose('chain')}\n                />\n              ) : (\n                <FilterIcon\n                  className={\n                    mode.mode === 'dark' ? 'FilterIcon' : 'FilterIconDark'\n                  }\n                  onClick={() => handleClick('chain')}\n                />\n              )}\n            </div>\n            <div\n              className={\n                mode.mode === 'dark'\n                  ? 'TableFilterDropdown'\n                  : 'TableFilterDropdownDark'\n              }\n              ref={chainRef}\n            >\n              <h3>filter by chain</h3>\n              <div className=\"DropdownResults\">\n                {reportedChains &&\n                  reportedChains.map((chain) => (\n                    <div\n                      key={chain}\n                      className={\n                        mode.mode === 'dark'\n                          ? 'DropdownDataRow'\n                          : 'DropdownDataRowDark'\n                      }\n                      onClick={() => handleFilter('chain', chain)}\n                    >\n                      {chainFilters.includes(chain) ? (\n                        <>\n                          <p>{chain}</p>\n                          <Checked\n                            className={\n                              mode.mode === 'dark' ? '' : 'DropdownCheckDark'\n                            }\n                          />\n                        </>\n                      ) : (\n                        <p>{chain}</p>\n                      )}\n                    </div>\n                  ))}\n              </div>\n              <div\n                className={\n                  mode.mode === 'dark'\n                    ? 'DropdownButtons'\n                    : 'DropdownButtonsDark'\n                }\n              >\n                <button\n                  className=\"DropdownApply\"\n                  onClick={() => handleFilterApply('chain')}\n                >\n                  Apply\n                </button>\n                <button\n                  className={\n                    mode.mode === 'dark' ? 'DropdownClear' : 'DropdownClearDark'\n                  }\n                  onClick={() => handleFilterClear('chain')}\n                >\n                  Clear\n                </button>\n              </div>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>FREQUENCY</h1>\n            </div>\n          </th>\n          <th className=\"TH__HeaderSpecial\">\n            <div className=\"TH__HeaderDiv\">\n              <h1>REMAINING BALANCE</h1>\n            </div>\n          </th>\n          <th>\n            <h1>DATE(DD/MM/YY), TIME</h1>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableData && tableData.length > 0 ? (\n          tableData.map((event, i) => (\n            <tr\n              key={`${event.id}-${i}`}\n              className={mode.mode === 'dark' ? 'TableBody' : 'TableBodyDark'}\n              onClick={() => handleRowClick(event.txnLink)}\n            >\n              <td className=\"TB__Symbols\">\n              {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n              event.referenceAsset ? (\n              event.referenceAsset.includes('ipfs') ? (\n                  <a className=\"GreenLink\" href={event.referenceAsset} target=\"_blank\" rel=\"noopener noreferrer\">\n                       ipfs link\n                  </a>\n                ) : (\n                  event.referenceAsset\n               )\n                ) : (\n                  'N/A' // or any other fallback value you prefer (parseFloat(event.multipliedValue) / 10 ** 18).toString() + event.tippingToken\n                )\n              ) : (\n                event.decodedValue\n              )}\n              </td> \n              <td className=\"TB__Value\">{event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? event.tips :event.tip}</td>             \n              <td className=\"TB__Chain\">{event.chain}</td>\n              <td className=\"TB__Reporter\">    \n              <p>{event.interval}</p>\n</td>\n<td className=\"TB__Balance\">\n  {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n     Math.min((((parseFloat(event.collateralBalanceGross).toString()) / (10 ** 6))  * (event.settlementFee / (10 ** 18))), 10)  + ' ' + event.symbol\n  ) : event.balance}\n</td>\n<td className=\"TB__DateTime\">\n  {event.chain === 'Diva Polygon Mainnet' && event.dataProvider === '0x7950db13cc37774614b0aa406e42a4c4f0bf26a6' ? (\n    event.expiryTime\n  ) : event.startTime}\n</td>\n            </tr>\n          ))\n        ) : (\n          <tr className=\"TableBodyNoMatches\">\n            <td colSpan=\"5\">\n              <LinearIndeterminate />\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TipTable;","import React, { useState, createContext, useEffect } from 'react'\n//The Graph\nimport { ApolloClient, InMemoryCache, useQuery } from '@apollo/client'\n//Utils\nimport { autopayQuery } from '../utils/queries'\nimport { decodingAutopayMiddleware, sortDataByProperty  } from '../utils/helpers'\n//Sort\n\nexport const GraphAutopayContext = createContext()\n\n//ApolloClients\n\nconst clientAmoy = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellor-autopay-amoy-graph/version/latest',\n  cache: new InMemoryCache(),\n})\n\nconst clientMainnet = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellor-autopay-ethereum-graph/version/latest',\n  cache: new InMemoryCache(),\n})\n\nconst clientSepolia = new ApolloClient({\n  uri: 'https://api.studio.thegraph.com/query/33329/tellor-autopay-sepolia/v0.0.5',\n  cache: new InMemoryCache(),\n})\n\n\nconst GraphAutopay = ({ children }) => {\n  //Component State\n  const [autopayMainnetData, setAutopayMainnetData] = useState({})\n  const [autopayAmoyData, setAutopayAmoyData] = useState({})\n  const [autopaySepoliaData, setAutopaySepoliaData] = useState({})\n  const [decodedData, setDecodedData] = useState([])\n  const [allGraphData, setAllGraphData] = useState(null)\n  //Context State\n\n  //Eth mainnet\n  const mainnet = useQuery(autopayQuery, {\n    client: clientMainnet,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Amoy\n  const amoy = useQuery(autopayQuery, {\n    client: clientAmoy,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  //Sepolia\n  const sepolia = useQuery(autopayQuery, {\n    client: clientSepolia,\n    fetchPolicy: 'network-only',\n    pollInterval: 5000,\n  })\n  \n  //useEffects for listening to reponses\n  //from ApolloClient queries\n  \n  //Eth Mainnet\n  useEffect(() => {\n    if (!mainnet) return\n    setAutopayMainnetData({\n      data: mainnet.data,\n      loading: mainnet.loading,\n      error: mainnet.error,\n    })\n    return () => {\n      setAutopayMainnetData({})\n    }\n  }, [mainnet.data, mainnet.loading, mainnet.error]) //eslint-disable-line*/\n    //Sepolia\n  useEffect(() => {\n    if (!sepolia) return\n    setAutopaySepoliaData({\n      data: sepolia.data,\n      loading: sepolia.loading,\n      error: sepolia.error,\n    })\n    return () => {\n      setAutopaySepoliaData({})\n    }\n  }, [sepolia.data, sepolia.loading, sepolia.error]) //eslint-disable-line*/\n  //Amoy\n  useEffect(() => {\n    if (!amoy) return\n    setAutopayAmoyData({\n      data: amoy.data,\n      loading: amoy.loading,\n      error: amoy.error,\n    })\n    return () => {\n      setAutopayAmoyData({})\n    }\n  }, [amoy.data, amoy.loading, amoy.error]) //eslint-disable-line\n  //useEffects for decoding autopay events\n  useEffect(() => {\n    if (\n      !autopayMainnetData.data ||\n      !autopaySepoliaData.data ||\n      !autopayAmoyData.data \n    )\n      return\n\n    let eventsArray = []\n\n    autopayAmoyData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Amoy Testnet' });\n      updatedEvent.txnLink = `https://amoy.polygonscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayAmoyData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Amoy Testnet' });\n      updatedEvent.txnLink = `https://amoy.polygonscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayMainnetData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Ethereum Mainnet' });\n      updatedEvent.txnLink = `https://etherscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopayMainnetData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Ethereum Mainnet' });\n      updatedEvent.txnLink = `https://etherscan.com/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopaySepoliaData.data.dataFeedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Sepolia Testnet' });\n      updatedEvent.txnLink = `https://sepolia.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n    \n    autopaySepoliaData.data.tipAddedEntities.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Sepolia Testnet' });\n      updatedEvent.txnLink = `https://sepolia.etherscan.io/tx/${event.txnHash}`;\n      eventsArray.push(updatedEvent);\n    });\n  \n    /*autopayDivaMumbaiData.data.feeRecipients.forEach((event) => {\n      event.chain = 'Diva Polygon Mainnet'\n      event.txnLink = `https://polygonscan.com/tx/${event.txnHash}`\n      eventsArray.push(event)\n    })\n\n    autopayDivaAdaptorMumbaiData.data.tipAddeds.forEach((event) => {\n      const updatedEvent = Object.assign({}, event, { chain: 'Diva Polygon Mainnet' });\n      updatedEvent.txnLink = `https://app.diva.finance/markets`;\n      });\n      */\n    \n    let sorted = sortDataByProperty('_startTime', eventsArray)\n    setAllGraphData(sorted)\n\n    return () => {\n      setAllGraphData(null)\n    }\n  }, [ autopayAmoyData, autopayMainnetData, autopaySepoliaData])\n\n\n  useEffect(() => {\n    if (!allGraphData) return\n    setDecodedData(decodingAutopayMiddleware(allGraphData))\n    return () => {\n      setDecodedData(null)\n    }\n  }, [allGraphData])\n\n\n  const GraphContextObj = {\n    decodedData: decodedData,\n  }\n\n  return (\n    <GraphAutopayContext.Provider value={GraphContextObj}>\n      {children}\n    </GraphAutopayContext.Provider>\n  )\n}\n\nexport default GraphAutopay\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can log the error to an error reporting service\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;","import React, { useContext, useEffect, useState } from 'react'\nimport '../styles/AllFeeds.css'\nimport TipTable from './TipTable'\n//Context\nimport {  GraphAutopayContext } from '../contexts/GraphAutopay'\nimport { ModeContext } from '../contexts/Mode'\nimport LinearIndeterminate from './LinearIndeterminate'\nimport ErrorBoundary from './ErrorBoundary'; // Import ErrorBoundary\n\n//Components\n\nfunction AllTips() {\n  //Context State\n  const autoPayData = useContext(GraphAutopayContext)\n  const mode = useContext(ModeContext)\n  //Component State\n  const [clippedData, setClippedData] = useState([])\n  const [loadMoreClicks, setLoadMoreClicks] = useState(1)\n  const [viewing, setViewing] = useState(null)\n  const [loadMoreButton, setLoadMoreButton] = useState(true)\n  const [filtering, setFiltering] = useState(false)\n\n  useEffect(() => {\n    if (!autoPayData.decodedData) return\n    const newData = autoPayData.decodedData.slice(0, 50);\n    setClippedData(prevData => {\n      if (JSON.stringify(newData) !== JSON.stringify(prevData)) {\n        return [...prevData, ...newData]\n      }\n      return prevData;\n    })\n  }, [autoPayData.decodedData])\n\n  useEffect(() => {\n    if (!clippedData) return\n    setViewing(clippedData.slice(0, 6))\n\n    return () => {\n      setViewing(null)\n    }\n  }, [clippedData]) //eslint-disable-line\n\n  const handleLoadMore = () => {\n    if (!loadMoreButton) return\n    setLoadMoreClicks(loadMoreClicks + 1)\n    let loads = Math.ceil((clippedData.length - 6) / 6)\n    let loadAmount = 6 + 6 * loadMoreClicks\n    if (loadMoreClicks <= loads) {\n      setViewing(clippedData.slice(0, loadAmount))\n      if (loadMoreClicks === loads) {\n        setLoadMoreButton(false)\n      }\n    }\n  }\n\n  return (\n    <>\n      {autoPayData && autoPayData.decodedData ? (\n        <div className=\"AllFeedsView\">\n                   <ErrorBoundary> {/* Wrap TipTable with ErrorBoundary */}\n\n          <TipTable\n            data={viewing}\n            allData={autoPayData}\n            setFiltering={setFiltering}\n          />\n                    </ErrorBoundary>\n\n          <button\n            className={\n              mode.mode === 'dark' ? 'AllFeeds__Button' : 'AllFeeds__ButtonDark'\n            }\n            onClick={handleLoadMore}\n            style={{\n              cursor: loadMoreButton ? 'pointer' : 'not-allowed',\n              display: filtering ? 'none' : 'flex',\n            }}\n          >\n            {loadMoreButton ? 'load more' : 'viewing last 50 reports'}\n          </button>\n        </div>\n      ) : (\n        <LinearIndeterminate />\n      )}\n    </>\n  )\n}\n\nexport default AllTips\n","import React, { useContext } from 'react'\n\nimport '../styles/Hero.css'\n//Components\nimport AllFeeds from '../components/AllFeeds.js'\nimport AllTips from './AllTips'\n//Contexts\nimport Graph from '../contexts/Graph'\nimport GraphAutopay from '../contexts/GraphAutopay'\nimport { ModeContext } from '../contexts/Mode'\n\nfunction Hero() {\n  //Component State\n  // const [active, setActive] = useState(true)\n  // const [inactive, setInactive] = useState(true) //eslint-disable-line\n  //\n  const mode = useContext(ModeContext)\n\n  //useEffect for routing\n  // useEffect(() => {\n  //   if (window.location.href.includes('/myfeeds')) {\n  //     setActive(false)\n  //     setInactive(false)\n  //   }\n  // }, [])\n\n  // const activeHelper = (tab) => {\n  //   if (tab === 'AllFeeds') {\n  //     setActive(true)\n  //     setInactive(true)\n  //   } else if (tab === 'MyFeeds') {\n  //     setActive(false)\n  //     setInactive(false)\n  //   }\n  // }\n\n  return (\n    <div className=\"HeroInnerContainer\">\n      {/*<h1 className=\"HeroHeader\">Your Oracle at Work</h1>}}*/}\n      <Graph>\n        <GraphAutopay>\n            <div\n              className={\n                mode && mode.mode === 'dark'\n                  ? 'HeroNavLinks'\n                  : 'HeroNavLinksLight'\n              }\n            >\n              {/* <Link\n                to=\"/\"\n                className={active ? 'ActiveLink' : 'InactiveLink'}\n                onClick={() => activeHelper('AllFeeds')}\n              >\n                All Feeds\n              </Link> */}\n            </div>\n            <div className=\"HeroSection\">\n              <h2 style={{marginTop: '1em'}}>Recent Reports</h2>\n              <AllFeeds />\n              <h2 style={{marginTop: '2em'}}>Tips</h2>\n              <AllTips />\n            </div>\n        </GraphAutopay>\n      </Graph>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { useContext } from 'react'\n//Components\nimport Nav from './components/frontendBoilerplate/Nav'\nimport Footer from './components/frontendBoilerplate/Footer'\nimport Hero from './components/Hero'\n//Styles\nimport './App.css'\n//Context\nimport { ModeContext } from './contexts/Mode'\n\nfunction App() {\n  const mode = useContext(ModeContext)\n\n  return (\n    <div className={mode && mode.mode === 'dark' ? 'App' : 'AppLight'}>\n      <Nav />\n      <div\n        className={\n          mode && mode.mode === 'dark' ? 'HeroContainer' : 'HeroContainerLight'\n        }\n      >\n        <Hero />\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React, { useState, createContext, useEffect } from 'react';\n//Utils\nimport chains from \"../utils/chains\";\nimport { getAssetBalances } from \"../utils/helpers\";\n//Web3\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\n\nexport const UserContext = createContext();\n\n//Web3 Modal Globals\nconst providerOptions = {\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n            infuraId: \"52474cef7b964b4fbf8e954a5dfa481b\", // required\n        },\n    },\n};\nconst web3Modal = new Web3Modal({\n    providerOptions, // required\n    cacheProvider: true,\n});\n\nconst User = ({ children }) => {\n    //Context State\n    const [currentUser, setCurrentUser] = useState(null);\n    const [connected, setConnected] = useState(false);\n    const [setupUserError, setSetupUserError] = useState(null);\n    const [eventsOn, setEventsOn] = useState(false);\n    \n    const setupUser = async () => {\n        try {\n            let user = { web3Modal: web3Modal };\n            user.provider = await web3Modal.connect();\n            user.web3 = new Web3(user.provider);\n            const chainId = await user.web3.eth.getChainId();\n            user.address = (await user.web3.eth.getAccounts())[0];\n            user.network = chains[chainId];\n            user.chainId = chainId;\n            user.balances = await getAssetBalances(user.web3, user.address, chainId);\n            return user;\n        } catch (err) {\n            // console.log(err);\n            setSetupUserError(err.message);\n        }\n    };\n\n    //UseEffect on \"connected = true\" flag,\n    //sets up user and network\n    useEffect(() => {\n        if (web3Modal && connected) {\n            //if check for when user stops login flow\n            if (currentUser !== undefined && currentUser !== null) return;\n            web3Modal.clearCachedProvider();\n            setupUser().then(res => {\n                setCurrentUser(res);\n            })\n            setEventsOn(true);\n        }\n    }, [connected]) //eslint-disable-line\n\n    //useEffect that checks for when user stops login flow,\n    //and resets.\n    useEffect(() => {\n        if (currentUser === undefined) {\n            setConnected(false);\n        } else if (currentUser === undefined && connected) {\n            setConnected(false);\n        } else if (currentUser !== undefined && currentUser !== null) {\n            setConnected(true);\n        }\n    }, [currentUser, connected])\n\n    //Turning on events subscription \n    //ONLY on first web3 injection \n    // (the \"connected = true\" useEffect),\n    //to prevent memory leaks and\n    //keep event listeners cleaned up.\n    if (currentUser && eventsOn) {\n        // Subscribe to chains change\n        window.ethereum.on(\"chainChanged\", () => {\n            setupUser().then(res => {\n                setCurrentUser(res);\n            })\n        });\n        // Subscribe to accounts change\n        window.ethereum.on(\"accountsChanged\", async (accounts) => {\n            if (accounts.length === 0) {\n                web3Modal.clearCachedProvider();\n            } else {\n                setupUser().then(res => {\n                    setCurrentUser(res);\n                });\n            }\n        });\n        setEventsOn(false);\n    }\n    \n    const UserContextObject = {\n        currentUser: currentUser,\n        connected: connected,\n        setupUserError: setupUserError,\n        setCurrentUser: setCurrentUser,\n        setConnected: setConnected,\n        setSetupUserError: setSetupUserError,\n        setupUser: setupUser,\n    }\n\n    return (\n        <UserContext.Provider value={UserContextObject}>\n            {children}\n        </UserContext.Provider >\n    );\n};\n\nexport default User;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport User from './contexts/User'\nimport Mode from './contexts/Mode'\n\nReactDOM.render(\n  <User>\n    <Mode>\n      <App />\n    </Mode>\n  </User>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}